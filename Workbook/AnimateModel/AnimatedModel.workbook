```json
{"exec-mode":"default","platform":"WPF","uti":"com.xamarin.workbook","packages":[]}
```

# WaveEngine 3D animations

In this workbook we are going to learn how to play 3d animations and how to add key events in a specific frame.

First load the basic libraries.

```csharp
#r "WaveEngine.Common.dll"
#r "WaveEngine.Adapter.dll"
#r "WaveEngine.Framework.dll"
#r "WaveEngine.Components.dll"
#r "WaveEngine.Materials.dll"
```

Now we are going to create a simple application.

```csharp
using WaveEngine.Framework; using WaveEngine.Adapter.Basics; using WaveEngine.Framework.Services; using WaveEngine.Common.Graphics
```

```csharp
public class MyScene : Scene
{
	protected override void CreateScene()
	{
		this.Load("Content/Scenes/MyScene.wscene");
	}
}
```

```csharp
public class MyGame : WaveEngine.Framework.Game
{
	public MyScene scene;
	
	public override void Initialize(WaveEngine.Common.IApplication application)
	{
		base.Initialize(application);

		this.scene = new MyScene();
		WaveServices.ScreenContextManager.To(new ScreenContext(this.scene));
	}
}
```

```csharp
MyGame game = new MyGame();
var app = await SimpleApp.RunAsync(game);
```

## Animations

Once the application is running we can get the model and Animation3D component reference.

```csharp
var model = game.scene.EntityManager.Find("model");
```

```csharp
using WaveEngine.Components.Animation;
```

```csharp
var animation3D = model.FindComponent<Animation3D>();
```

```csharp
animation3D.CurrentAnimation;
```

We will play one of the model animations and change some of its parameters, for example change the value of the FramePerSeconds property.

```csharp
animation3D.PlayAnimation("Walk");
```

```csharp
animation3D.CurrentAnimation;
```

```csharp
animation3D.FramesPerSecond
```

```csharp
animation3D.State
```

```csharp
animation3D.StopAnimation();
```

It is possible to reproduce a single animation only one time. Compile the following line serveral times to see how the State changes.

```csharp
animation3D.PlayAnimation("Jog", loop:false);
```

```csharp
animation3D.State
```

```csharp
animation3D.Frame
```

## SOUND

In this part we reproduce a step sound every time a foot touches the ground. You need to create a soundbank first.

```csharp
using WaveEngine.Framework.Sound;
```

```csharp
SoundBank sb = new SoundBank();
```

```csharp
SoundInfo sound = new SoundInfo("Content/Assets/Sounds/footstep1.wav")
```

```csharp
sb.Add(sound);
```

```csharp
WaveServices.SoundPlayer.RegisterSoundBank(sb);
```

The next line of code plays the sound. Execute this serveral times to simulate what we try to achieve.

```csharp
WaveServices.SoundPlayer.Play(sound);
```

We can raise an event in a specify frame (using the Wave Visual Editor we can see in what frames each foot touches the ground).

The AddkeyFrameEventâ€™s paramenters are (AnimationName, Frame, \[Tag : optional\])

```csharp
animation3D.AddKeyFrameEvent("Jog", 1, "DoFootstep")
		   .AddKeyFrameEvent("Jog", 14, "DoFootstep")
		   .AddKeyFrameEvent("Jog", 26, "DoFootstep")
		   .AddKeyFrameEvent("Jog", 39, "DoFootstep");
```

Now we only need to subscribe to the event (in this example the tag parameter is not necessary, but now you also know how you can differentiate several different events in the same animation)

```csharp
animation3D.OnKeyFrameEvent += (s, e) =>
{
	if(e.Value == "DoFootstep")
	{
		WaveServices.SoundPlayer.Play(sound);
	}
}
```

```csharp
animation3D.PlayAnimation("Jog", loop: true);
```

```csharp
animation3D.FramesPerSecond = 30
```

```csharp
animation3D.StopAnimation();
```